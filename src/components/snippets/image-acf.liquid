{%- comment -%}
  Parameters
  * class
  * image
  * mobile_width - Max display width of image within mobile breakpoint
  * xxs_width - Max display width of image within xxs breakpoint
  * xs_width - Max display width of image within xs breakpoint
  * s_width - Max display width of image within s breakpoint
  * sm_width - Max display width of image within sm breakpoint
  * md_width - Max display width of image within md breakpoint
  * lg_width - Max display width of image within lg breakpoint
  * xl_width - Max display width of image within xl breakpoint
  * xxl_width - Max display width of image within xxl breakpoint
  * xxxl_width - Max display width of image within xxxl breakpoint
  * object_fit
{%- endcomment -%}

{% liquid
  comment
    These variables should match the "screens" breakpoint values from tailwind.config.js
  endcomment
  assign break_xxs = 180
  assign break_xs = 320
  assign break_s = 480
  assign break_sm = 640
  assign break_md = 768
  assign break_lg = 1080
  assign break_xl = 1440
  assign break_xxl = 2160
  assign break_xxxl = 2880

  assign source = image.src
  assign object_fit = object_fit | default: 'object-cover'
  assign class = class | default: ''
  assign attr = attr | default: ''
  assign alt = alt | default: ''
  assign loading = loading | default: 'lazy'

  if object_fit == 'contain'
    assign object_fit_class = 'object-contain'
  else
    assign object_fit_class = 'object-cover'
  endif

  assign query = '(min-width: [width]px)'
  assign retina_query = '(min-resolution: 200dpi), (-webkit-min-device-pixel-ratio: 2)'
  assign accentuate_cdn = '//images.accentuate.io?c_options=w_'
  capture options
    echo '&shop=' | append: shop.permanent_domain | append: '&image=' | append: source
  endcapture

  comment
    Naural width refers to image display size at 2x resolution
  endcomment
  assign natural_width = image.width

  comment
    Width for default image (mobile fallback)
  endcomment
  assign mobile_width = mobile_width | default: break_xxs | at_most: break_xxs | at_most: natural_width

  comment
    Width and media qeury for "xxs" breakpoint image
  endcomment
  assign xxs_width = xxs_width | default: break_xs | at_most: break_xs | at_most: natural_width
  assign xxs_retina_width = xxs_width | times: 2

  comment
    Width and media qeury for "xs" breakpoint image
  endcomment
  assign xs_width = xs_width | default: break_s | at_most: break_s | at_most: natural_width
  assign xs_retina_width = xs_width | times: 2

  comment
    Width and media qeury for "s" breakpoint image
  endcomment
  assign s_width = s_width | default: break_sm | at_most: break_sm | at_most: natural_width
  assign s_retina_width = s_width | times: 2

  comment
    Width and media qeury for "sm" breakpoint image
  endcomment
  assign sm_width = sm_width | default: break_md | at_most: break_md | at_most: natural_width
  assign sm_retina_width = sm_width | times: 2

  comment
    Width and media qeury for "md" breakpoint image
  endcomment
  assign md_width = md_width | default: break_lg | at_most: break_lg | at_most: natural_width
  assign md_retina_width = md_width | times: 2

  comment
    Width and media qeury for "lg" breakpoint image
  endcomment
  assign lg_width = lg_width | default: break_xl | at_most: break_xl | at_most: natural_width
  assign lg_retina_width = lg_width | times: 2

  comment
    Width and media qeury for "xl" breakpoint image
  endcomment
  assign xl_width = xl_width | default: break_xxl | at_most: break_xxl | at_most: natural_width
  assign xl_retina_width = xl_width | times: 2

  comment
    Width and media qeury for "xxl" breakpoint image
  endcomment
  assign xxl_width = xxl_width | default: break_xxxl | at_most: break_xxxl | at_most: natural_width
  assign xxl_retina_width = xxl_width | times: 2

  comment
    Width and media qeury for max image size
  endcomment
  assign max_width = max_width | default: natural_width | at_most: natural_width
  assign max_retina_width = max_width | times: 2
%}

{%- capture src_set_native -%}
  {%- if xxs_width > mobile_width -%}
    {{ accentuate_cdn | append: xxs_width | append: options }} {{ xxs_width }}w
  {%- endif -%}
  {%- if xs_width > xxs_width -%}
    ,{{ accentuate_cdn | append: xs_width | append: options }} {{ xs_width }}w
  {%- endif -%}
  {%- if s_width > xs_width -%}
    ,{{ accentuate_cdn | append: s_width | append: options }} {{ s_width }}w
  {%- endif -%}
  {%- if s_width > xs_width -%}
    ,{{ accentuate_cdn | append: s_width | append: options }} {{ s_width }}w
  {%- endif -%}
  {%- if sm_width > s_width -%}
    ,{{ accentuate_cdn | append: sm_width | append: options }} {{ sm_width }}w
  {%- endif -%}
  {%- if md_width > sm_width -%}
    ,{{ accentuate_cdn | append: md_width | append: options }} {{ md_width }}w
  {%- endif -%}
  {%- if lg_width > md_width -%}
    ,{{ accentuate_cdn | append: lg_width | append: options }} {{ lg_width }}w
  {%- endif -%}
  {%- if xl_width > lg_width -%}
    ,{{ accentuate_cdn | append: xl_width | append: options }} {{ xl_width }}w
  {%- endif -%}
  {%- if xxl_width > xl_width -%}
    ,{{ accentuate_cdn | append: xxl_width | append: options }} {{ xxl_width }}w
  {%- endif -%}
  {%- if xxxl_width > xxl_width -%}
    ,{{ accentuate_cdn | append: xxxl_width | append: options }} {{ xxxl_width }}w
  {%- endif -%}
  {%- if max_width > xxxl_width -%}
    ,{{ accentuate_cdn | append: max_width | append: options }} {{ max_width }}w
  {%- endif -%}
{%- endcapture -%}

{%- capture src_set_retina -%}
  {%- if xxs_width > mobile_width -%}
    {{ accentuate_cdn | append: xxs_retina_width | append: options }} {{ xxs_width }}w
  {%- endif -%}
  {%- if xs_width > xxs_width -%}
    ,{{ accentuate_cdn | append: xs_retina_width | append: options }} {{ xs_width }}w
  {%- endif -%}
  {%- if s_width > xs_width -%}
    ,{{ accentuate_cdn | append: s_retina_width | append: options }} {{ s_width }}w
  {%- endif -%}
  {%- if s_width > xs_width -%}
    ,{{ accentuate_cdn | append: s_retina_width | append: options }} {{ s_width }}w
  {%- endif -%}
  {%- if sm_width > s_width -%}
    ,{{ accentuate_cdn | append: sm_retina_width | append: options }} {{ sm_width }}w
  {%- endif -%}
  {%- if md_width > sm_width -%}
    ,{{ accentuate_cdn | append: md_retina_width | append: options }} {{ md_width }}w
  {%- endif -%}
  {%- if lg_width > md_width -%}
    ,{{ accentuate_cdn | append: lg_retina_width | append: options }} {{ lg_width }}w
  {%- endif -%}
  {%- if xl_width > lg_width -%}
    ,{{ accentuate_cdn | append: xl_retina_width | append: options }} {{ xl_width }}w
  {%- endif -%}
  {%- if xxl_width > xl_width -%}
    ,{{ accentuate_cdn | append: xxl_retina_width | append: options }} {{ xxl_width }}w
  {%- endif -%}
  {%- if xxxl_width > xxl_width -%}
    ,{{ accentuate_cdn | append: xxxl_retina_width | append: options }} {{ xxxl_width }}w
  {%- endif -%}
  {%- if max_width > xxxl_width -%}
    ,{{ accentuate_cdn | append: max_retina_width | append: options }} {{ max_width }}w
  {%- endif -%}
{%- endcapture -%}

{%- if image -%}
  <picture {{ attr }}>
    <source sizes="(min-width: 0rem) 100vw" srcset="{{ src_set_native }}">
    <source media="{{ retina_query }}" sizes="(min-width: 0rem) 100vw" srcset="{{ src_set_retina }}">
    <img
      class="{{ class }} {{ object_fit_class }} lazy"
      data-src="{{ accentuate_cdn | append: mobile_width | append: options }}"
      width="{{ image.width }}"
      height="{{ image.height }}"
      loading="{{ loading }}"
      alt="{{ alt }}"
    >
  </picture>
{%- else -%}
  <div class="{{ class }} relative">
    <span class="absolute inset-0 h-full w-full bg-gradient-to-br from-[#f0f0f0] to-[#9b9b9b]"></span>
  </div>
{%- endif -%}
